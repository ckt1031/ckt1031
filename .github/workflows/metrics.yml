name: Metrics

on:
  # Schedule daily updates
  schedule:
    # Runs at 18:00 UTC
    # Runs at 02:00 HKT
    - cron: "0 18 * * *"
  # Run workflow manually
  workflow_dispatch:

jobs:
  github-metrics:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Install rclone
        run: curl https://rclone.org/install.sh | sudo bash

      - name: Cache rclone
        uses: actions/cache@v3
        with:
          path: /usr/bin/rclone
          key: ${{ runner.os }}-rclone-v1
        
      - name: Setup rclone config
        # Create the rclone config directory and decode the base64 secrets
        # Note: Ensure RCLONE_CONFIG_BASE64 is your base64 encoded rclone.conf file
        run: |
          mkdir -p ~/.config/rclone
          echo "${{ secrets.RCLONE_CONFIG_BASE64 }}" | base64 -d > ~/.config/rclone/rclone.conf

      - name: Cache Docker layers
        # Cache the Docker data directory to speed up subsequent image pulls/runs.
        # This caches the layers of previously downloaded images.
        uses: actions/cache@v3
        with:
          # The path where Docker stores its data (images, layers, etc.) on Ubuntu.
          path: /var/lib/docker
          # The cache key. We use runner.os for platform specificity and a static string
          # 'lowlighter-metrics-latest-v1' to identify this cache.
          # This key won't change when 'latest' updates, but Docker itself handles
          # downloading new layers when a cached 'latest' image is outdated.
          key: ${{ runner.os }}-docker-lowlighter-metrics-latest-v1
          # Restore keys. If the exact 'key' doesn't match, try to restore a broader cache.
          restore-keys: |
            ${{ runner.os }}-docker-lowlighter-metrics-latest-
            ${{ runner.os }}-docker-

      - name: Generate Metrics SVG
        # Run the ghcr.io/lowlighter/metrics Docker container.
        # Docker will check if 'latest' is updated and only pull new layers if necessary,
        # otherwise, it uses the cached image layers.
        run: |
          docker run --rm \
            --env INPUT_TOKEN="${{ secrets.GITHUB_TOKEN }}" \
            --env INPUT_USER=ckt1031 \
            --env INPUT_PLUGIN_LANGUAGES=yes \
            --env INPUT_PLUGIN_LANGUAGES_INDEPTH="yes" \
            --env INPUT_PLUGIN_LANGUAGES_IGNORED="css, tsx, jsx, html, md, mdx" \
            --volume=/tmp:/renders \
            ghcr.io/lowlighter/metrics:latest
            
      - name: Upload to S3
        # Use rclone to copy the generated SVG to your S3-compatible storage (R2/Cloudflare, AWS S3, etc.)
        # Make sure 'r2-common' matches the remote name in your rclone.conf
        # And 'common' is the bucket name.
        run: |
          rclone copy /tmp/github-metrics.svg r2-common:common/github --s3-no-check-bucket
